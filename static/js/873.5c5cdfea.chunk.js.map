{"version":3,"file":"static/js/873.5c5cdfea.chunk.js","mappings":"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","sources":["webpack://react_port/./src/components/profile/profile.module.css?5210","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","components/profile/Profile.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"profile_section__juc7o\",\"prof_cont\":\"profile_prof_cont__JFiMG\",\"prof_cont_img\":\"profile_prof_cont_img__tt6r1\",\"prof_img\":\"profile_prof_img__6N0uC\",\"input_cont\":\"profile_input_cont__wxP88\",\"input_first\":\"profile_input_first__VwUfL\",\"input_sec\":\"profile_input_sec__lRVqO\",\"button\":\"profile_button__FnWSp\",\"end_cont\":\"profile_end_cont__ckBKr\",\"end_right\":\"profile_end_right__9DLjp\",\"map_cont\":\"profile_map_cont__uVCMW\"};","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.6.2');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { React, useRef } from \"react\";\nimport profile from \"../../assets/profile.png\";\nimport classes from \"./profile.module.css\";\nimport emailjs from \"@emailjs/browser\";\n\nexport default function Profile() {\n  // const position = [51.505, -0.09];\n  const form = useRef();\n  const mailsubmit = (e) => {\n    e.preventDefault();\n    emailjs\n      .sendForm(\n        \"service_h3za1zf\",\n        \"template_r3qijzm\",\n        form.current,\n        \"hWFRbdNJj3EOxAoCG\"\n      )\n      .then(\n        () => {\n          alert(\"Message successfully sent!!!\");\n          window.location.reload(false);\n        },\n        () => {\n          alert(\"Failed to sent the message!!!\\nPlease try again...\");\n        }\n      );\n  };\n  return (\n    <section className={classes.section}>\n      <div className={classes.prof_cont}>\n        <div className={classes.prof_cont_img}>\n          <img className={classes.prof_img} src={profile} alt=\"profile\" />\n        </div>\n      </div>\n      <div className={classes.input_cont}>\n        <form ref={form}>\n          <div className={classes.input_first}>\n            <input type=\"text\" placeholder=\"Your Name\" name=\"name\" required />\n            <input\n              type=\"tel\"\n              placeholder=\"Your contact number\"\n              name=\"telephone\"\n              required\n            />\n          </div>\n          <div className={classes.input_sec}>\n            <input\n              type=\"email\"\n              placeholder=\"useremail@xyz.domain\"\n              name=\"email\"\n              required\n            />\n          </div>\n          <div>\n            <textarea\n              placeholder=\"Type your query here.....\"\n              name=\"query\"\n              required\n            />\n          </div>\n          <div className={classes.button}>\n            <button type=\"submit\" onClick={mailsubmit}>\n              Connect\n            </button>\n          </div>\n        </form>\n      </div>\n      <div className={classes.end_cont}></div>\n    </section>\n  );\n}\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","EmailJSResponseStatus","httpResponse","instance","TypeError","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","keys","forEach","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","Profile","useRef","className","classes","src","profile","alt","ref","type","placeholder","name","required","onClick","e","preventDefault","emailjs","current","then","alert","window","location","reload"],"sourceRoot":""}